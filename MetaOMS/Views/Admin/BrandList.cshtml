@{
    ViewData["Title"] = "BrandList-";
}

<link href="~/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
@model X.PagedList.IPagedList<MetaOMS.ViewModels.BrandVM>
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc;
@using X.PagedList;
<div class="col-8 offset-2 mt-5">
    <h2 class="text-center mt-3 mb-3">
        List of Brands &nbsp; &nbsp;<a onclick="showInPopup('@Url.Action("AddOrUpdateBrand","Admin",new {id=0 },Context.Request.Scheme)','Add New Brand')" class="btn btn-success text-white"><i class="mdi mdi-plus"></i></a>
    </h2>
    <div class="table-responsive">
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th>
                        #
                    </th>
                    <th>
                        Brand Name
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SerialNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BrandVMName)
                        </td>

                        <td>

                            <a onclick="showInPopup('@Url.Action("AddOrUpdateBrand","Admin",new {id=@item.BrandVMId },Context.Request.Scheme)','Update Brand')"
                               class="btn btn-dropbox text-white"><i class="mdi mdi-pencil"></i></a>

                            @*<a onclick="deleteData('@Url.Action("DeleteBrand","Admin",new {id=@item.BrandVMId },Context.Request.Scheme)')"
                               class="btn btn-pinterest text-white"><i class="mdi mdi-delete"></i></a>*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @if (Model.Count > 0)
    {
        @Html.PagedListPager((IPagedList)Model, c => Href("~/Admin/BrandList?page=" + c),
        new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
        {
            PageClasses = new string[] { "page-link" },
            UlElementClasses = new string[] { "pagination" },
            LiElementClasses = new string[] { "page-item" },
            MaximumPageNumbersToDisplay = 5,
        }
        )}
</div>
<script src="~/sweetalert2/sweetalert2.min.js"></script>