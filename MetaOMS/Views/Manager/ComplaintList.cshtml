@model X.PagedList.IPagedList<MetaOMS.ViewModels.DeliveryVM>
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc;
@using X.PagedList;
@{
    ViewData["Title"] = "ComplaintList-";
}

<div class="col-10 offset-1 text-center">
    <h2 class="text-center mt-5 mb-3">Complaint Issues (Return & Refund)</h2>
    <div class="search-form mb-2">
        <div class="input-group">
            <div class="input-group-prepend">
                <div class="input-group-text">
                    <i class="ti-search"></i>
                </div>
            </div>
            <input id="myCustomSearch" type="text" class="form-control" placeholder="Type here to search...">
        </div>
    </div>
    <div class="table-responsive">
        <table class="table" id="example">
            <thead class="thead-light">
                <tr>
                    <th>#</th>
                    <th>Customer</th>
                    <th>Contact</th>
                    <th>Products</th>
                    <th>Product quantity</th>
                    <th>Action</th>
                    <th>Total price</th>
                    <th>Status</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    <tr>
                        <td class="align-middle">@Model[i].SerialNo</td>
                        <td class="align-middle">@Model[i].CustomerVMName</td>
                        <td class="align-middle">@Model[i].CustomerVMContactNo</td>
                        <td>
                            <table class="d-flex justify-content-center table-borderless">
                                @foreach (var item in Model[i].productInventory_VM.productInventoryVMs)
                                {
                                    <tr>
                                        <td>@item.NameVM</td>
                                    </tr>
                                }
                            </table>
                        </td>
                        <td>
                            <table class="d-flex justify-content-center table-borderless">
                                @foreach (var item in Model[i].productInventory_VM.productInventoryVMs)
                                {
                                    <tr>
                                        <td>@item.QuantityVM</td>
                                    </tr>
                                }
                            </table>
                        </td>
                        <td>
                            <table class="d-flex justify-content-center table-borderless">
                                @foreach (var item in Model[i].productInventory_VM.productInventoryVMs)
                                {
                                    <tr>
                                        @if (item.StringStatusVM == "Return")
                                        {
                                            <td class="font-weight-bold text-info">@item.StringStatusVM</td>
                                        }
                                        else if (item.StringStatusVM == "Refund")
                                        {
                                            <td class="font-weight-bold text-primary">@item.StringStatusVM</td>
                                        }
                                        else if (item.StringStatusVM == "Return & Refund")
                                        {
                                            <td class="font-weight-bold text-warning">@item.StringStatusVM</td>
                                        }
                                    </tr>
                                }
                            </table>
                        </td>
                        <td class="align-middle">@Model[i].TotalPriceVM</td>
                        @if (Model[i].StringReturnedRefundedVMStatus == "Done")
                        {
                            <td class="align-middle" id="status">
                                <span class="font-weight-bold badge badge-success"> @Model[i].StringReturnedRefundedVMStatus</span>
                            </td>
                        }
                        else if (Model[i].StringReturnedRefundedVMStatus == "Pending")
                        {
                            <td class="align-middle" id="status">
                                <span class="font-weight-bold badge badge-dark"> @Model[i].StringReturnedRefundedVMStatus</span>
                            </td>
                        }
                        <td class="align-middle">
                            <a onclick="showInPopup('@Url.Action("ComplaintIndividualInfo","Manager",new {id=Model[i].HiddenPKVMId },Context.Request.Scheme)','Details')"
                               class="btn btn-orange text-white"><i class="mdi mdi-information-outline"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("ComplaintList", new { page = page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
    })
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#example').DataTable({
                "dom": 'lrtip',
                "info": false,
                "lengthChange": false,
                "paging": false,
            });
            var table = $('#example').DataTable();
            $('#myCustomSearch').on('keyup', function () {
                table.search($(this).val()).draw();
            });
        });
    </script>
    <script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>

} 